function Main.main 1
	push constant 8001
	push constant 16
	push constant 1
	neg
	call Main.fillMemory 3
	pop temp 7
	push constant 8000
	call Memory.peek 1
	pop local 0  // value
	push local 0  // value
	call Main.convert 1
	pop temp 7
	push constant 0
	return
function Main.convert 3
	push constant 0  // true
	not  // true
	pop local 2  // loop
label LOOP0
	push local 2  // loop
	not
	if-goto ENDLOOP0
	push local 1  // position
	push constant 1
	add
	pop local 1  // position
	push local 0  // mask
	call Main.nextMask 1
	pop local 0  // mask
	push local 1  // position
	push constant 16
	gt
	not
	not
	if-goto ELSE1
	push argument 0  // value
	push local 0  // mask
	and
	push constant 0
	eq
	not
	not
	if-goto ELSE2
	push constant 8000
	push local 1  // position
	add
	push constant 1
	call Memory.poke 2
	pop temp 7
	goto ELSE_END2
label ELSE2
	push constant 8000
	push local 1  // position
	add
	push constant 0
	call Memory.poke 2
	pop temp 7
label ELSE_END2
	goto ELSE_END1
label ELSE1
	push constant 0  // false
	pop local 2  // loop
label ELSE_END1
	goto LOOP0
label ENDLOOP0
	push constant 0
	return
function Main.nextMask 0
	push argument 0  // mask
	push constant 0
	eq
	not
	if-goto ELSE3
	push constant 1
	return
	goto ELSE_END3
label ELSE3
	push argument 0  // mask
	push constant 2
	call Math.multiply 2
	return
label ELSE_END3
function Main.fillMemory 0
label LOOP4
	push argument 1  // length
	push constant 0
	gt
	not
	if-goto ENDLOOP4
	push argument 0  // address
	push argument 2  // value
	call Memory.poke 2
	pop temp 7
	push argument 1  // length
	push constant 1
	sub
	pop argument 1  // length
	push argument 0  // address
	push constant 1
	add
	pop argument 0  // address
	goto LOOP4
label ENDLOOP4
	push constant 0
	return
