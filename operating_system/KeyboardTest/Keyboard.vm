function Keyboard.init 0
	push constant 0  // true
	not  // true
	pop static 0  // enable_print
	push constant 0
	return
function Keyboard.keyPressed 0
	push constant 24576
	call Memory.peek 1
	return
function Keyboard.readChar 2
	push constant 0
	pop local 0  // key
label LOOP0
	push local 0  // key
	push constant 0
	eq
	not
	if-goto ENDLOOP0
	push constant 5
	call Sys.wait 1
	pop temp 0
	call Keyboard.keyPressed 0
	pop local 0  // key
	goto LOOP0
label ENDLOOP0
	push local 0  // key
	pop local 1  // c
	push static 0  // enable_print
	not
	if-goto ELSE1
	push local 1  // c
	call Output.printChar 1
	pop temp 0
	goto ELSE_END1
label ELSE1
label ELSE_END1
label LOOP2
	push local 0  // key
	push constant 0
	eq
	not
	not
	if-goto ENDLOOP2
	push constant 5
	call Sys.wait 1
	pop temp 0
	call Keyboard.keyPressed 0
	pop local 0  // key
	goto LOOP2
label ENDLOOP2
	push local 1  // c
	return
function Keyboard.readLine 2
	push argument 0  // message
	call Output.printString 1
	pop temp 0
	push constant 0  // false
	pop static 0  // enable_print
	push constant 0
	pop local 0  // c
	push constant 64
	call String.new 1
	pop local 1  // str
label LOOP3
	push local 0  // c
	push constant 128
	eq
	not
	not
	if-goto ENDLOOP3
	call Keyboard.readChar 0
	pop local 0  // c
	push local 0  // c
	push constant 129
	eq
	not
	if-goto ELSE4
	push local 1  // str
	call String.length 1
	push constant 0
	gt
	not
	if-goto ELSE5
	push local 1  // str
	call String.eraseLastChar 1
	pop local 1  // str
	call Output.backSpace 0
	pop temp 0
	goto ELSE_END5
label ELSE5
label ELSE_END5
	goto ELSE_END4
label ELSE4
	push local 0  // c
	call Output.printChar 1
	pop temp 0
	push local 1  // str
	push local 0  // c
	call String.appendChar 2
	pop local 1  // str
label ELSE_END4
	goto LOOP3
label ENDLOOP3
	push constant 0  // true
	not  // true
	pop static 0  // enable_print
	push local 1  // str
	return
function Keyboard.readInt 1
	push argument 0  // message
	call Keyboard.readLine 1
	pop local 0  // str
	push local 0  // str
	call String.intValue 1
	return
