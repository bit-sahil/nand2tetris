// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static boolean enable_print;

    /** Initializes the keyboard. */
    function void init() {
        let enable_print = true;  // should be default

        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var char key, c;
        let key = 0;

        while(key = 0) {
            // wait for user to press key
            do Sys.wait(5);
            let key = Keyboard.keyPressed();
        }

        let c = key;
        if(enable_print) {
            do Output.printChar(c);
        }

        while(~(key=0)) {
            do Sys.wait(5);
            let key = Keyboard.keyPressed();
        }

        return c;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var char c;
        var String str;

        do Output.printString(message);
        let enable_print = false;

        let c = 0;
        let str = String.new(64); // number of characters which can be displayed in a single line
        // todo: update this to reduce string length, and possibly accomodate multi-lines

        while(~(c=128)) {
            let c = Keyboard.readChar();

            if(c=129) {
                // todo: handle backspace properly
                if(str.length() > 0) {
                    let str = str.eraseLastChar();
                    do Output.backSpace();
                }
                
            } else {
                do Output.printChar(c);
                let str = str.appendChar(c);
            }
        }

        let enable_print = true;
        return str;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        var String str;

        let str = Keyboard.readLine(message);

        return str.intValue();
    }
}
